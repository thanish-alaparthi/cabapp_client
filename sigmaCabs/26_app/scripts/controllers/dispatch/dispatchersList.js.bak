/*
Name: CustomerListController
Description: Handles displaying list (grid) of customers.
Date: 13Nov2013
Author: Mario::216mario216@gmail.com
*/

'use strict';

angular.module('sigmaCabsApp')
	.controller('dispatchersListController', function($scope, $rootScope, URLService, $dialog, dispatchService, $timeout) {
		$scope.selectedVehicleList = [];
		$scope.selectedBookingRecords= [];
		$scope.mySelections = [];
		$scope.bookingData = [];

		dispatchService.fnGetDisBookingData()
		.success(function(data, status, headers, config){
			console.log('Success: ', data);
			$scope.bookingData = data;
			// change ids to proper text
		/*	for(var i=0;i<data.length; i++){
				data[i].attachmenttypeName = PrerequisiteService.vehicleAttachmentTypeNames[data[i].vehicleAttachmentType];
				data[i].vehicletypeName = PrerequisiteService.vehicleTypeOptions[data[i].vehicleType];
			}

			$scope.vehiclesData = data;*/
		})
		.error(function(data, status, headers, config){
			console.log('Error: ', data)
		});

		// default settings for grid
		$scope.totalServerItems = 0;
		$scope.pagingOptions = {
			pageSizes: [10, 50, 100, 150],
			pageSize: 10,
			currentPage: 1
		};
		$scope.columnDefs =  [{
				field: 'id',
				displayName: 'ID',
				width:'*'
			},{
				field: 'pickupAddress',
				displayName: 'Pickup Address',
				width:'*'
			}, {
				field: 'dropAddress',
				displayName: 'Drop Address',
				width:'*'
			}, {
				field: 'journeyDate',
				displayName: 'Journey Date',
				width:'*'
			}, {
				field: 'pickupTime',
				displayName: 'Pickup Time',
				width:'*'
			}, {
				field: 'customerId',
				displayName: 'Customer Id',
				width:'*'
			},{
				field: 'bookingState',
				displayName: 'Booking State',
				width:'*'
			},{
				field: 'passengerCount',
				displayName: 'Passenger Count',
				width:'*'
			},{
				field: 'vehicleCount',
				displayName: 'Vehicle Count',
				width:'*'
			},{
				field: 'vehicleTypes',
				displayName: 'Vehicle Types',
				width:'*'
			},{
				field: 'status',
				displayName: 'Status',
				width:'*'
			}];


		/*
			Name: fnSetPagingData,
			Description: Handles paging data for grid
		*/

		/*
			Name: fnGetPagedDataAsync,
			Description: Make REST API call to get data
		*/

		$scope.dispBookGridOptions = {
			data: 'bookingData',
			columnDefs: $scope.columnDefs,
			enablePaging: true,
			showFooter: true,
			multiSelect: false,
			enableColumnResize: true,
			totalServerItems: 'totalServerItems',
			pagingOptions: $scope.pagingOptions,
			filterOptions: $scope.filterOptions,
			showSelectionCheckbox: true,
			selectedItems: $scope.mySelections,
			afterSelectionChange: function () {
				console.log($scope.mySelections);
			  $rootScope.$emit('showVehicleGrid');
			  $scope.showVehicleDetView = true;	
		      $scope.selectedBookings = [];
		      angular.forEach($scope.mySelections, function (item ) {
		        $scope.selectedBookingRecords.push(item);
		      });
		    },
			plugins: [new ngGridRowSelectionEvents()]
		};

		$scope.$on('ngGridRowSelected', function(event, rowselected){
			$timeout(function(){
			 	$rootScope.$emit('showVehicleGrid');
				$scope.showVehicleDetView = true;
		    },0)			
		 				    
		});

		$scope.$on('ngGridRowDeSelected', function(event, rowselected){
			$timeout(function(){
				$rootScope.$emit('hideVehicleGrid');
				$scope.showVehicleDetView = false;
		    },0)
			
		   
		});

		$scope.$watch('showVehicleDetView', function(){
	    /*
	      Height of the grid and resize event occuring at the same time. So to serialize both action timeout is used 
	    */
		    $timeout(function(){
		      $('.dispBookingGrid').trigger('resize');
		    },0);
		});

		$scope.$on('getDispatchDetails', function(){
			$scope.sendSelectedRecords();
		});

		$scope.sendSelectedRecords = function (){
			$scope.$emit('selectedBookingDet', $scope.selectedBookingRecords)
		};
		

	});