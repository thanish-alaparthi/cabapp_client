"use strict";angular.module("sigmaCabsApp",["ngCookies","ngResource","ngSanitize","ngRoute","ngGrid","ui.bootstrap"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/booking.html",controller:"bookingController"}).when("/users",{templateUrl:"views/users.html",controller:"usersMainController"}).when("/client",{templateUrl:"views/client.html",controller:"dashboardController"}).when("/vehicle",{templateUrl:"views/vehicle.html",controller:"vehicleMainController"}).when("/reports",{templateUrl:"views/reports.html",controller:"dashboardController"}).when("/dispatch",{templateUrl:"views/dispatch.html",controller:"dispatchMainController"}).when("/booking",{templateUrl:"views/booking.html",controller:"bookingController"}).otherwise({redirectTo:"/"})}]),angular.module("sigmaCabsApp").controller("EditorController",["$scope",function(a){a.login=function(){alert("submitted")}}]),angular.module("sigmaCabsApp").run(["AuthenticationService","$window","URLService","$rootScope",function(a,b,c,d){a.getSession().success(function(a){d.$broadcast("userInfoFromSession",{displayName:"Mario Ray",role:1,id:234565434})})}]).controller("dashboardController",["$scope","$rootScope","URLService","$dialog","modalWindow",function(a,b,c){a.customerList=c.view("customerList")}]),angular.module("sigmaCabsApp").controller("usersAddUpdateController",["oUser","$scope","$dialog","dialog","wizardHandler","$http","PrerequisiteService","URLService","UsersService","VehiclesService","appUtils",function(a,b,c,d,e,f,g,h,i,j,k){var l=b,m=new Date,n=m.getFullYear().toString(),o=(m.getMonth()+1).toString(),p=m.getDate().toString(),q=n+"-"+(o[1]?o:"0"+o[0])+"-"+(p[1]?p:"0"+p[0]),r=parseInt(n)+1+"-"+(o[1]?o:"0"+o[0])+"-"+(p[1]?p:"0"+p[0]);l.userDetObj={},l.fromSaveAndExit=!1,l.user={},console.log("PassedUserDetails: ",a),l.vehicleList=[],j.fnGetVehiclesDD().success(function(a){console.log("Success fnGetVehiclesDD: ",a);for(var b=0;b<a.length;b++)l.vehicleList.push({id:a[b].id,code:a[b].id})}).error(function(a){console.log("Error fnGetVehiclesDD: ",a)}),l.fnSetDefaultUserData=function(){l.user.userType="6",l.user.basicDetails={dob:q,jobCategory:"1",addresses:[{type:"1"},{type:"2"}]},l.user.professionalDetails={educationDetails:[],pastExperience:[]},l.user.driverDetails={liscenseDetails:{issuedDate:q},badgeDetails:{expiryDate:q},currentVehicleAttached:{issueDate:q,expiryDate:r,assignedOnDate:q}}},a.userId?i.fnGetUserById({id:a.userId}).success(function(a){console.log("Success fnGetUserById: ",a),a.userType=a.userType.toString(),l.user=a}).error(function(a){console.log("Error fnGetUserById: ",a)}):l.fnSetDefaultUserData(),l.close=function(){d.close()},l.userTypes=g.userTypes,l.userJobCategories=g.userJobCategories,l.tabs=[{label:"Personal Details",tooltip:"Personal Details",id:0,selected:!0,showTab:!0,template:h.view("userPersonalDetailsTab")},{label:"Professional Details",tooltip:"Professional Details",id:1,selected:!1,showTab:!1,template:h.view("professionalDetailsTab")},{label:"Driver Details",tooltip:"Driver Details",id:2,showTab:!1,selected:!1,template:h.view("driverDetailsTab")}];var s=0;e.setSteps(l.tabs),e.setStep(0),l.tabs[0].selected=!0,e.showCurrentTab(),l.previousSelectedTab=null,l.currentSelectedTab=l.tabs[0].id,l.currentlyClickedTab=null,l.wizardHandler=e,l.handleTabClick=function(a){l.currentSelectedTab!=a&&l.setTabSelection(a)},l.setTabSelection=function(a){l.currentlyClickedTab=a,l.isNext=!0,b.$broadcast("getTabData"),l.changeTab(a)},l.changeTab=function(a){s=0,l.tabs[l.currentSelectedTab].selected=!1,l.tabs[a].selected=!0,l.previousSelectedTab=l.currentSelectedTab,l.currentSelectedTab=a,e.setStep(a),e.showCurrentTab(),l.wizardHandler=e},l.handleNext=function(){b.$broadcast("getTabData")},l.handleSaveAndExit=function(){l.fromSaveAndExit=!0,l.handleNext(),console.log("Final User Data",l.user),i.fnAddUserData(l.user).success(function(a){if(console.log("Success: ",arguments),a&&a.message&&a.message.length)for(var b=0;b<a.message.length;b++){var c=a.message[b].user||a.message[b].address||a.message[b].education||a.message[b].employment||a.message[b].driver;alert(c)}}).error(function(){console.log("Error: ",arguments)})},l.$on("sendTabData",function(a,b){l.userDetObj=k.mergeObj(l.userDetObj,b.detObj),console.log(l.userDetObj)}),l.$on("showNext",function(){l.showNext=!0})}]),angular.module("sigmaCabsApp").controller("UserPersonalDetailsController",["$scope",function(a){var b=a;a.gPlace,console.log(">> in UserPersonalDetailsController: ",b.user),a.$watch("user.userType",function(){b.user&&b.user.userType&&("1"==b.user.userType?(b.tabs[1].showTab=!0,b.tabs[2].showTab=!0):"4"==b.user.userType||"5"==b.user.userType||"6"==b.user.userType?(b.tabs[1].showTab=!0,b.showNext=!0):(b.tabs[1].showTab=!1,b.tabs[2].showTab=!1))},!0),b.$on("getTabData",function(){var a={tabID:0,detObj:b.user};b.$emit("sendTabData",a)})}]),angular.module("sigmaCabsApp").controller("UserProfessionalDetails",["$scope","$http","PrerequisiteService","URLService","UsersService",function(a,b,c,d){var e=a,f=new Date,g=f.getFullYear().toString(),h=(f.getMonth()+1).toString(),i=f.getDate().toString(),j=g+"-"+(h[1]?h:"0"+h[0])+"-"+(i[1]?i:"0"+i[0]),k=parseInt(g)+1+"-"+(h[1]?h:"0"+h[0])+"-"+(i[1]?i:"0"+i[0]);e.tmpEducationalDetails={yop:"",institute:"",degreeDiploma:"",grade:"",location:"",percentMarks:"",id:""},e.tmpPastExperienceDetails={company:"",startDate:j,endDate:k,description:"",location:"",percentMarks:"",id:""},e.professionalSubTab=1,e.fnIsActiveProfessionalSubTab=function(a){return e.professionalSubTab==a},e.fnSetActiveProfessionalSubTab=function(a){e.professionalSubTab=a},e.userEducationalDetails=d.view("userEducationalDetailsSubTab"),e.userPastExperienceDetails=d.view("userPastExperienceDetailsTab"),e.educationalDetailsAddButon="Add to List",e.fnClearUserEducationalDetailsFields=function(){e.tmpEducationalDetails={yop:"",institute:"",degreeDiploma:"",grade:"",location:"",percentMarks:"",id:""},e.tmpEducationalDetails.rowIndex="",e.educationalDetailsAddButon="Add to List"},e.fnEducationalDetailsRowSelected=function(a){return e.educationalDetailsSelectedData.length?(e.tmpEducationalDetails.yop=e.educationalDetailsSelectedData[0].yop,e.tmpEducationalDetails.institute=e.educationalDetailsSelectedData[0].institute,e.tmpEducationalDetails.degreeDiploma=e.educationalDetailsSelectedData[0].degreeDiploma,e.tmpEducationalDetails.grade=e.educationalDetailsSelectedData[0].grade,e.tmpEducationalDetails.percentMarks=e.educationalDetailsSelectedData[0].percentMarks,e.tmpEducationalDetails.educationalDetailsId=e.educationalDetailsSelectedData[0].id,e.tmpEducationalDetails.rowIndex=a.rowIndex,e.educationalDetailsAddButon="Update",void 0):(e.fnClearUserEducationalDetailsFields(),void 0)},e.educationalDetailsSelectedData=[],e.educationalDetailsGridOptions={data:"user.professionalDetails.educationDetails",columnDefs:[{field:"yop",displayName:"Year of Passing"},{field:"institute",displayName:"Institute",visible:!1},{field:"degreeDiploma",displayName:"Degree/ Diploma"},{field:"grade",displayName:"Grade"},{field:"percentMarks",displayName:"Percent/ Marks"},{field:"attachment",displayName:"Attachment",visible:!1},{field:"id",displayName:"EducationalDetailsId",visible:!0}],keepLastSelected:!1,selectedItems:e.educationalDetailsSelectedData,multiSelect:!1,afterSelectionChange:e.fnEducationalDetailsRowSelected},e.fnAddEducationalDetailsToList=function(){return e.tmpEducationalDetails.yop&&e.tmpEducationalDetails.institute&&e.tmpEducationalDetails.degreeDiploma&&e.tmpEducationalDetails.percentMarks&&e.tmpEducationalDetails.grade?(parseInt(e.tmpEducationalDetails.rowIndex)>=0?(e.user.professionalDetails.educationDetails[e.tmpEducationalDetails.rowIndex].yop=e.tmpEducationalDetails.yop,e.user.professionalDetails.educationDetails[e.tmpEducationalDetails.rowIndex].institute=e.tmpEducationalDetails.institute,e.user.professionalDetails.educationDetails[e.tmpEducationalDetails.rowIndex].degreeDiploma=e.tmpEducationalDetails.degreeDiploma,e.user.professionalDetails.educationDetails[e.tmpEducationalDetails.rowIndex].percentMarks=e.tmpEducationalDetails.percentMarks,e.user.professionalDetails.educationDetails[e.tmpEducationalDetails.rowIndex].grade=e.tmpEducationalDetails.grade):e.user.professionalDetails.educationDetails.push({yop:e.tmpEducationalDetails.yop,institute:e.tmpEducationalDetails.institute,degreeDiploma:e.tmpEducationalDetails.degreeDiploma,percentMarks:e.tmpEducationalDetails.percentMarks,grade:e.tmpEducationalDetails.grade,attachments:[]}),e.tmpEducationalDetails={yop:"",institute:"",degreeDiploma:"",grade:"",location:"",percentMarks:""},e.tmpEducationalDetails.rowIndex="",void 0):(alert("Please add all the educationalDetails details."),void 0)},e.pastExperienceDetailsAddButon="Add to List",e.fnClearUserPastExperienceDetailsFields=function(){e.tmpPastExperienceDetails={company:"",startDate:j,endDate:k,description:"",location:"",id:""},e.tmpPastExperienceDetails.rowIndex="",e.pastExperienceDetailsAddButon="Add to List"},e.fnPastExperienceDetailsRowSelected=function(a){return e.pastExperienceDetailsSelectedData.length?(e.tmpPastExperienceDetails.company=e.pastExperienceDetailsSelectedData[0].company,e.tmpPastExperienceDetails.startDate=e.pastExperienceDetailsSelectedData[0].startDate,e.tmpPastExperienceDetails.endDate=e.pastExperienceDetailsSelectedData[0].endDate,e.tmpPastExperienceDetails.location=e.pastExperienceDetailsSelectedData[0].location,e.tmpPastExperienceDetails.description=e.pastExperienceDetailsSelectedData[0].description,e.tmpPastExperienceDetails.id=e.pastExperienceDetailsSelectedData[0].id,e.tmpPastExperienceDetails.rowIndex=a.rowIndex,e.pastExperienceDetailsAddButon="Update",void 0):(e.fnClearUserPastExperienceDetailsFields(),void 0)},e.pastExperienceDetailsSelectedData=[],e.pastExperienceDetailsGridOptions={data:"user.professionalDetails.pastExperience",columnDefs:[{field:"company",displayName:"Company"},{field:"startDate",displayName:"Start Date"},{field:"endDate",displayName:"End Date"},{field:"location",displayName:"Location"},{field:"description",displayName:"Description"},{field:"attachment",displayName:"Attachment",visible:!1},{field:"id",displayName:"PastExperienceDetailsId",visible:!0}],keepLastSelected:!1,selectedItems:e.pastExperienceDetailsSelectedData,multiSelect:!1,afterSelectionChange:e.fnPastExperienceDetailsRowSelected},e.fnAddPastExperienceDetailsToList=function(){return console.log(e.tmpPastExperienceDetails),e.tmpPastExperienceDetails.company&&e.tmpPastExperienceDetails.startDate&&e.tmpPastExperienceDetails.endDate&&e.tmpPastExperienceDetails.description?(parseInt(e.tmpPastExperienceDetails.rowIndex)>=0?(e.user.professionalDetails.pastExperience[e.tmpPastExperienceDetails.rowIndex].company=e.tmpPastExperienceDetails.company,e.user.professionalDetails.pastExperience[e.tmpPastExperienceDetails.rowIndex].startDate=e.tmpPastExperienceDetails.startDate,e.user.professionalDetails.pastExperience[e.tmpPastExperienceDetails.rowIndex].endDate=e.tmpPastExperienceDetails.endDate,e.user.professionalDetails.pastExperience[e.tmpPastExperienceDetails.rowIndex].description=e.tmpPastExperienceDetails.description,e.user.professionalDetails.pastExperience[e.tmpPastExperienceDetails.rowIndex].location=e.tmpPastExperienceDetails.location):e.user.professionalDetails.pastExperience.push({company:e.tmpPastExperienceDetails.company,startDate:e.tmpPastExperienceDetails.startDate,endDate:e.tmpPastExperienceDetails.endDate,description:e.tmpPastExperienceDetails.description,location:e.tmpPastExperienceDetails.location,attachments:[]}),e.tmpPastExperienceDetails={company:"",startDate:j,endDate:k,description:"",location:""},e.tmpPastExperienceDetails.rowIndex="",void 0):(alert("Please add all the pastExperienceDetails details."),void 0)}}]),angular.module("sigmaCabsApp").run(["AuthenticationService","$window","URLService","UsersService","$rootScope",function(a,b,c,d,e){a.getSession().success(function(a){e.$broadcast("userInfoFromSession",{displayName:"Mario Ray",role:1,id:234565434})})}]).controller("usersMainController",["$scope","$rootScope","URLService","UsersService","$dialog","modalWindow",function(a,b,c,d,e,f){var g=a;a.customerList=c.view("usersList"),g.close=function(){dialog.close()},g.fnAddUser=function(){console.log("add fnAddUser"),a.opts={templateUrl:"views/users/usersModal.html",controller:"usersAddUpdateController",dialogClass:"modalClass",resolve:{editMode:[function(){return!1}],oUser:function(){return{userId:null}}}},f.addDataToModal(a.opts)},g.fnEditUser=function(){return console.log("fnEditUser..."),console.log("scope.selectedUser",g.selectedUser),g.selectedUser?(a.opts={templateUrl:"views/users/usersModal.html",controller:"usersAddUpdateController",dialogClass:"modalClass",resolve:{editMode:[function(){return!1}],oUser:function(){return{userId:g.selectedUser.id}}}},f.addDataToModal(a.opts),void 0):(alert("Please select a user from the list to edit."),void 0)},g.fnDeleteUser=function(){return console.log("scope.selectedUser",g.selectedUser),g.selectedUser?(confirm("Are you sure you want to delete the selected user?")&&d.fnDeleteUser({id:g.selectedUser.id}).success(function(a){console.log("success fnDeleteUser: ",a),g.selectedUser=null,a&&a.message&&a.message.user&&alert(a.message.user),b.$broadcast("eventUserDeleted",!0)}).error(function(a){console.log("Error fnDeleteUser: ",a)}),void 0):(alert("Please select a user from the list to delete."),void 0)},g.$on("eventUserSelectedFromList",function(a,b){g.selectedUser=b})}]),angular.module("sigmaCabsApp").controller("usersListController",["$scope","$rootScope","URLService","PrerequisiteService","$dialog","$http","UsersService",function(a,b,c,d,e,f,g){console.log("loaded..."),a.fnLoadUsers=function(){g.fnGetAllUsersData().success(function(b){console.log("success fnGetAllUsersData: ",b);for(var c=0;c<b.length;c++)b[c].jobcategoryName=d.userJobCategoriesNames[b[c].jobCategory],b[c].usertypeName=d.userTypes[b[c].userType];a.usersData=b}).error(function(a){console.log("Error fnGetAllUsersData: ",a)})},a.fnLoadUsers(),a.filterOptions={filterText:"",useExternalFilter:!0},a.totalServerItems=0,a.pagingOptions={pageSizes:[10,50,100,150],pageSize:10,currentPage:1},a.fnSetPagingData=function(b,c,d){var e=b.slice((c-1)*d,c*d);a.myData=e,a.totalServerItems=b.length,a.$$phase||a.$apply()},a.fnGetPagedDataAsync=function(b,d){setTimeout(function(){f.get(c.service("customerList")).success(function(c){a.fnSetPagingData(c,d,b)})},100)},a.$watch("pagingOptions",function(b,c){b!==c&&b.currentPage!==c.currentPage&&a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage,a.filterOptions.filterText)},!0),a.$watch("filterOptions",function(b,c){b!==c&&a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage,a.filterOptions.filterText)},!0),a.gridOptions={data:"usersData",columnDefs:[{field:"id",displayName:"ID"},{field:"firstName",displayName:"First Name"},{field:"lastName",displayName:"Last Name"},{field:"username",displayName:"Username"},{field:"mobile",displayName:"Mobile"},{field:"usertypeName",displayName:"Type"},{field:"jobcategoryName",displayName:"Job Category"},{field:"email",displayName:"Email"}],enablePaging:!0,showFooter:!0,multiSelect:!1,totalServerItems:"totalServerItems",pagingOptions:a.pagingOptions,filterOptions:a.filterOptions,afterSelectionChange:function(c){a.$emit("eventUserSelectedFromList",c.selectionProvider.selectedItems[0]),b.$broadcast("setDefaultBookingTab",{customerData:c.selectionProvider.selectedItems[0]}),b.$broadcast("loadUpcomingBookingList",{customerData:c.selectionProvider.selectedItems[0]}),b.$broadcast("loadPastBookingList",{customerData:c.selectionProvider.selectedItems[0]}),b.$broadcast("loadCanceledBookingList",{customerData:c.selectionProvider.selectedItems[0]})}},a.$on("loadCustomerList",function(b,c){return c.showAddNewCustomerList?(alert("Temp Hack to show Add New Customer screen."),a.showAddNewCustomerList=c.showAddNewCustomerList,a.$emit("eventShowAddNewCustomer",a.showAddNewCustomerList),void 0):(a.$emit("eventShowAddNewCustomer",a.showAddNewCustomerList),a.showAddNewCustomerList=!1,a.oQuery=c,a.myData=[],("mobile"==c.sType&&c.query&&c.query.toString().length>5||"name"==c.sType&&c.query&&c.query.toString().length>2)&&a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage),void 0)}),a.$on("eventUserDeleted",function(){console.log("Reloading users..."),a.fnLoadUsers()})}]),angular.module("sigmaCabsApp").controller("vehicleAddUpdateController",["oVehicle","$scope","PrerequisiteService","$dialog","dialog","wizardHandler","$http","URLService","VehiclesService","appUtils",function(a,b,c,d,e,f,g,h,i,j){var k=b,l=new Date,m=l.getFullYear().toString(),n=(l.getMonth()+1).toString(),o=l.getDate().toString(),p=m+"-"+(n[1]?n:"0"+n[0])+"-"+(o[1]?o:"0"+o[0]),q=parseInt(m)+1+"-"+(n[1]?n:"0"+n[0])+"-"+(o[1]?o:"0"+o[0]);k.vehicle={},k.fromSaveAndExit=!1,k.vehicleOwnersList=[],i.fnGetVehicleOwnersList().success(function(a){console.log("Success fnGetVehicleOwnersList: ",a);for(var b=0;b<a.length;b++)k.vehicleOwnersList.push({id:a[b].id,name:a[b].firstName+" "+a[b].lastName});console.log("scope.vehicleOwnersList",k.vehicleOwnersList)}).error(function(a){console.log("Error fnGetVehicleOwnersList: ",a)}),k.fnSetDefaultVehicleValues=function(){k.vehicle.vehicleType=1..toString(),k.vehicle.vehicleAttachmentType=1..toString(),k.vehicle.carrier="1",k.vehicle.companyBranding=!0,k.vehicle.insuranceDetails=[],k.tmpInsuranceDetails={insuranceNumber:"",insuranceType:"1",name:"",issueDate:p,expiryDate:q,provider:"",amount:"",id:""},k.vehicle.permitDetails=[],k.tmpPermitDetails={permitNumber:"",permitType:"1",issueDate:p,expiryDate:q,id:""},k.vehicle.roadTaxDetails=[],k.tmpRoadTaxDetails={roadTaxNumber:"",premiumType:"1",issueDate:p,expiryDate:q,premiumAmount:"",id:""},k.vehicle.rcDetails=[],k.tmpRcDetails={rcNumber:"",issueDate:p,expiryDate:q,id:""},k.vehicle.vehicleCondition={exterior:{dentAndScratch:[],tyres:{frontLeft:"1",frontRight:"1",backRight:"1",backLeft:"1",stepney:"1"},lights:{front:"1",rear:"1",indicator:"1"},winShield:{front:"1",rear:"1"}},interior:{floorMet:"1",seatCover:"1",ac:"1",perfume:"1",companyInternalBranding:"1",comments:""}},k.tmpDentAndScratchDetails={type:"1",severity:"1"},k.vehicle.vehiclePerformance={battery:{lastChangedOn:p,lastChangedKm:"",description:""},electricals:{lastChangedOn:p,lastChangedKm:"",description:""},clutch:{lastChangedOn:p,lastChangedKm:"",description:""},breaks:{lastChangedOn:p,lastChangedKm:"",description:""},alignment:{lastChangedOn:p,lastChangedKm:"",description:""},suspension:{lastChangedOn:p,lastChangedKm:"",description:""},coolers:{lastChangedOn:p,lastChangedKm:"",description:""},airFilters:{lastChangedOn:p,lastChangedKm:"",description:""},engineOil:{lastChangedOn:p,lastChangedKm:"",description:""},powerSteeringOil:{lastChangedOn:p,lastChangedKm:"",description:""},gearOil:{lastChangedOn:p,lastChangedKm:"",description:""},breakOil:{lastChangedOn:p,lastChangedKm:"",description:""}},k.vehicle.facilities={entertainment:{musicSystem:{aux:!1,usb:!1,videoOut:!1},cardPayments:!1,displayForVideo:!1,newsPaper:!1},billingSystem:!1,vehicleTrackingSystem:!1,journySecuritySystem:!1,tarrifLaminatedSystem:!1},k.vehicle.advertisments={offLineAdds:!1,onLineAdds:!1}},console.log(a),a.id?(k.screeType="Update Vehicle ["+a.vehicleCode+"]",i.fnGetVehicleDataById({id:a.id}).success(function(a){console.log("Success fnGetVehicleDataById: ",a),k.vehicle=a}).error(function(a){console.log("Error fnGetVehicleDataById: ",a)})):(k.screeType="Add Vehicle",k.fnSetDefaultVehicleValues()),k.brandingOptoins=c.companyBrandingOptions,k.vehicleTypes=c.vehicleTypeOptions,k.vehicleAttachmentTypes=c.vehicleAttachmentTypeOptions,k.tempVehicleConditionTypes=c.vehicleConditionTypes,k.entertainmentOptions=c.entertainmentOptions,k.insuranceTypeOptions=c.insuranceType,k.supportSubTab=1,k.fnIsActiveSupportSubTab=function(a){return k.supportSubTab==a},k.fnSetActiveSupportSubTab=function(a){k.supportSubTab=a},k.vehicleInsuranceDetails=h.view("vehicleSupportInsuranceDetailsSubTab"),k.vehiclePermitDetails=h.view("vehicleSupportPermitDetailsSubTab"),k.vehicleRoadTaxDetails=h.view("vehicleSupportRoadTaxDetailsSubTab"),k.vehicleRcDetails=h.view("vehicleSupportRcDetailsSubTab"),k.exteriorSubTab=1,k.fnIsActiveExteriorSubTab=function(a){return k.exteriorSubTab==a},k.fnSetActiveExteriorSubTab=function(a){k.exteriorSubTab=a},k.vehicleDentAndScratchesDetails=h.view("vehicleExterirorDentAndScratchesDetailsSubTab"),k.vehicleTyresDetails=h.view("vehicleExterirorTyresDetailsSubTab"),k.vehicleLightsDetails=h.view("vehicleExterirorLightsDetailsSubTab"),k.vehicleWindShieldDetails=h.view("vehicleExterirorWindSheildDetailsSubTab"),k.vehicleExteriorComments=h.view("vehicleExterirorCommentsDetailsSubTab"),k.performanceSubTab=1,k.fnIsActivePerformaceSubTab=function(a){return k.performanceSubTab==a},k.fnSetActivePerformaceSubTab=function(a){k.performanceSubTab=a},k.vehicleBatteryAndElectricals=h.view("vehiclePerformanceBatteryAndElectricalsSubTab"),k.vehicleClutchAndBreaks=h.view("vehiclePerformanceClutchAndBreaksSubTab"),k.vehicleAlignmentAndSuspension=h.view("vehiclePerformanceAlignmentAndSuspensionsSubTab"),k.vehicleCoolersAndAirFilters=h.view("vehiclePerformanceCoolersAndAirFiltersSubTab"),k.vehicleEngineAndPowerSteeringOil=h.view("vehiclePerformanceEngineAndPowerSteeringOilSubTab"),k.vehicleGearAndBreakOil=h.view("vehiclePerformanceGearAndBreakOilSubTab"),k.facilitiesSubTab=1,k.fnIsActiveFacilitiesSubTab=function(a){return k.facilitiesSubTab==a},k.fnSetActiveFacilitiesSubTab=function(a){k.facilitiesSubTab=a},k.vehicleEntertainment=h.view("vehicleFacilitiesEntertainmentSubTab"),k.vehicleAdvertisments=h.view("vehicleFacilitiesAdvertismentSubTab"),k.close=function(){e.close()},k.vehicleBrands=[{id:"1",name:"Tata"},{id:"2",name:"Hunday"},{id:"3",name:"Toyota"},{id:"4",name:"Audi"},{id:"5",name:"Mercedies"},{id:"6",name:"Honda"},{id:"7",name:"Maruti"}],k.tabs=[{label:"Basic Details",tooltip:"Basic Details",id:0,selected:!0,showTab:!0,template:h.view("vehicleBasicDetails")},{label:"Support Details",tooltip:"Support Details",id:1,selected:!1,showTab:!0,template:h.view("vehicleSupportDetailsTab")},{label:"Exterior Condition",tooltip:"Exterior Condition",id:2,selected:!1,showTab:!0,template:h.view("vehicleExteriorCondtionTab")},{label:"Interior Condition",tooltip:"Interior Condition",id:3,selected:!1,showTab:!0,template:h.view("vehicleInteriorCondtionTab")},{label:"Vehicle Performance",tooltip:"Vehicle Performance",id:4,selected:!1,showTab:!0,template:h.view("vehiclePerformanceTab")},{label:"Facilities",tooltip:"Facilities",id:5,selected:!1,showTab:!0,template:h.view("vehicleFacilitiesTab")}],k.carrierRadioTypes=c.carrierTypes;var r=0;f.setSteps(k.tabs),f.setStep(0),k.tabs[0].selected=!0,f.showCurrentTab(),k.previousSelectedTab=null,k.currentSelectedTab=k.tabs[0].id,k.currentlyClickedTab=null,k.wizardHandler=f,k.handleTabClick=function(a){k.currentSelectedTab!=a&&k.setTabSelection(a)},k.setTabSelection=function(a){k.currentlyClickedTab=a,k.isNext=!0,b.$broadcast("getTabData"),k.changeTab(a)},k.changeTab=function(a){r=0,k.tabs[k.currentSelectedTab].selected=!1,k.tabs[a].selected=!0,k.previousSelectedTab=k.currentSelectedTab,k.currentSelectedTab=a,f.setStep(a),f.showCurrentTab(),k.wizardHandler=f},k.handleNext=function(){b.$broadcast("getTabData")},k.handleSaveAndExit=function(){k.fromSaveAndExit=!0,k.vehicle.id?i.fnUpdateVehicleData(k.vehicle).success(function(a){console.log("Success: ",arguments),alert(a.response.message),k.close()}).error(function(){console.log("Error: ",arguments)}):i.fnAddVehicleData(k.vehicle).success(function(a){console.log("Success: ",arguments),alert(a.response.message),k.close()}).error(function(){console.log("Error: ",arguments)})},k.$on("sendTabData",function(a,b){k.userDetObj=j.mergeObj(k.userDetObj,b.detObj)}),k.$on("showNext",function(){k.showNext=!0}),k.insuranceAddButon="Add to List",k.fnClearVehicleInsuranceFields=function(){k.tmpInsuranceDetails={insuranceNumber:"",insuranceType:"1",name:"",issueDate:p,expiryDate:q,provider:"",amount:"",id:""},k.tmpInsuranceDetails.rowIndex="",k.insuranceAddButon="Add to List"},k.fnInsuranceRowSelected=function(a){return k.insuranceSelectedData.length?(k.tmpInsuranceDetails.insuranceNumber=k.insuranceSelectedData[0].insuranceNumber,k.tmpInsuranceDetails.name=k.insuranceSelectedData[0].name,k.tmpInsuranceDetails.insuranceType=k.insuranceSelectedData[0].insuranceType,k.tmpInsuranceDetails.issueDate=k.insuranceSelectedData[0].issueDate,k.tmpInsuranceDetails.expiryDate=k.insuranceSelectedData[0].expiryDate,k.tmpInsuranceDetails.provider=k.insuranceSelectedData[0].provider,k.tmpInsuranceDetails.amount=k.insuranceSelectedData[0].amount,k.tmpInsuranceDetails.id=k.insuranceSelectedData[0].id,k.tmpInsuranceDetails.rowIndex=a.rowIndex,k.insuranceAddButon="Update",void 0):(k.fnClearVehicleInsuranceFields(),void 0)},k.insuranceSelectedData=[],k.insuranceGridOptions={data:"vehicle.insuranceDetails",columnDefs:[{field:"insuranceNumber",displayName:"Insurance Number"},{field:"name",displayName:"Name"},{field:"insuranceType",displayName:"Type",visible:!1},{field:"issueDate",displayName:"Issue Date"},{field:"expiryDate",displayName:"Expiry Date"},{field:"provider",displayName:"provider"},{field:"amount",displayName:"Amount"},{field:"attachment",displayName:"Attachment",visible:!1},{field:"insuranceId",displayName:"InsuranceId",visible:!1}],keepLastSelected:!1,selectedItems:k.insuranceSelectedData,multiSelect:!1,afterSelectionChange:k.fnInsuranceRowSelected},k.fnAddInsuranceToList=function(){return k.tmpInsuranceDetails.issueDate&&k.tmpInsuranceDetails.expiryDate&&k.tmpInsuranceDetails.provider&&k.tmpInsuranceDetails.amount?(parseInt(k.tmpInsuranceDetails.rowIndex)>=0?(k.vehicle.insuranceDetails[k.tmpInsuranceDetails.rowIndex].issueDate=k.tmpInsuranceDetails.issueDate,k.vehicle.insuranceDetails[k.tmpInsuranceDetails.rowIndex].expiryDate=k.tmpInsuranceDetails.expiryDate,k.vehicle.insuranceDetails[k.tmpInsuranceDetails.rowIndex].provider=k.tmpInsuranceDetails.provider,k.vehicle.insuranceDetails[k.tmpInsuranceDetails.rowIndex].amount=k.tmpInsuranceDetails.amount,k.vehicle.insuranceDetails[k.tmpInsuranceDetails.rowIndex].insuranceType=k.tmpInsuranceDetails.insuranceType,k.vehicle.insuranceDetails[k.tmpInsuranceDetails.rowIndex].name=k.tmpInsuranceDetails.name,k.vehicle.insuranceDetails[k.tmpInsuranceDetails.rowIndex].insuranceNumber=k.tmpInsuranceDetails.insuranceNumber):k.vehicle.insuranceDetails.push({insuranceType:k.tmpInsuranceDetails.insuranceType,name:k.tmpInsuranceDetails.name,insuranceNumber:k.tmpInsuranceDetails.insuranceNumber,issueDate:k.tmpInsuranceDetails.issueDate,expiryDate:k.tmpInsuranceDetails.expiryDate,provider:k.tmpInsuranceDetails.provider,amount:k.tmpInsuranceDetails.amount,attachments:[]}),k.tmpInsuranceDetails={insuranceNumber:"",insuranceType:"1",name:"",issueDate:p,expiryDate:q,provider:"",amount:""},k.tmpInsuranceDetails.rowIndex="",void 0):(alert("Please add all the insurance details."),void 0)},k.permitAddButon="Add to List",k.fnClearVehiclePermitFields=function(){k.tmpPermitDetails={permitNumber:"",permitType:"1",issueDate:p,expiryDate:q,id:""},k.tmpPermitDetails.rowIndex="",k.permitAddButon="Add to List"},k.fnPermitRowSelected=function(a){return k.permitSelectedData.length?(console.log(k.permitSelectedData[0]),k.tmpPermitDetails.permitNumber=k.permitSelectedData[0].permitNumber,k.tmpPermitDetails.permitType=k.permitSelectedData[0].permitType,k.tmpPermitDetails.issueDate=k.permitSelectedData[0].issueDate,k.tmpPermitDetails.expiryDate=k.permitSelectedData[0].expiryDate,k.tmpPermitDetails.permitId=k.permitSelectedData[0].permitId,k.tmpPermitDetails.id=k.permitSelectedData[0].id,k.tmpPermitDetails.rowIndex=a.rowIndex,k.permitAddButon="Update",void 0):(k.fnClearVehiclePermitFields(),void 0)},k.permitSelectedData=[],k.permitGridOptions={data:"vehicle.permitDetails",columnDefs:[{field:"permitNumber",displayName:"Permit Number"},{field:"permitType",displayName:"Type",visible:!1},{field:"issueDate",displayName:"Issue Date"},{field:"expiryDate",displayName:"Expiry Date"},{field:"attachment",displayName:"Attachment",visible:!1},{field:"permitId",displayName:"PermitId",visible:!1}],keepLastSelected:!1,selectedItems:k.permitSelectedData,multiSelect:!1,afterSelectionChange:k.fnPermitRowSelected},k.fnAddPermitToList=function(){return k.tmpPermitDetails.issueDate&&k.tmpPermitDetails.permitNumber&&k.tmpPermitDetails.expiryDate?(parseInt(k.tmpPermitDetails.rowIndex)>=0?(k.vehicle.permitDetails[k.tmpPermitDetails.rowIndex].issueDate=k.tmpPermitDetails.issueDate,k.vehicle.permitDetails[k.tmpPermitDetails.rowIndex].expiryDate=k.tmpPermitDetails.expiryDate,k.vehicle.permitDetails[k.tmpPermitDetails.rowIndex].permitType=k.tmpPermitDetails.permitType,k.vehicle.permitDetails[k.tmpPermitDetails.rowIndex].permitNumber=k.tmpPermitDetails.permitNumber):k.vehicle.permitDetails.push({permitType:k.tmpPermitDetails.permitType,permitNumber:k.tmpPermitDetails.permitNumber,issueDate:k.tmpPermitDetails.issueDate,expiryDate:k.tmpPermitDetails.expiryDate,attachments:[]}),k.tmpPermitDetails={permitNumber:"",permitType:"1",name:"",issueDate:p,expiryDate:q,provider:"",amount:""},k.tmpPermitDetails.rowIndex="",void 0):(alert("Please add all the permit details."),void 0)},k.roadTaxAddButon="Add to List",k.fnClearVehicleRoadTaxFields=function(){k.tmpRoadTaxDetails={roadTaxNumber:"",premiumType:"1",issueDate:p,expiryDate:q,premiumAmount:""},k.tmpRoadTaxDetails.rowIndex="",k.roadTaxAddButon="Add to List"},k.fnRoadTaxRowSelected=function(a){return k.roadTaxSelectedData.length?(k.tmpRoadTaxDetails.roadTaxNumber=k.roadTaxSelectedData[0].roadTaxNumber,k.tmpRoadTaxDetails.premiumType=k.roadTaxSelectedData[0].premiumType,k.tmpRoadTaxDetails.issueDate=k.roadTaxSelectedData[0].issueDate,k.tmpRoadTaxDetails.expiryDate=k.roadTaxSelectedData[0].expiryDate,k.tmpRoadTaxDetails.premiumAmount=k.roadTaxSelectedData[0].premiumAmount,k.tmpRoadTaxDetails.roadTaxId=k.roadTaxSelectedData[0].roadTaxId,k.tmpRoadTaxDetails.rowIndex=a.rowIndex,k.roadTaxAddButon="Update",void 0):(k.fnClearVehicleRoadTaxFields(),void 0)},k.roadTaxSelectedData=[],k.roadTaxGridOptions={data:"vehicle.roadTaxDetails",columnDefs:[{field:"roadTaxNumber",displayName:"RoadTax Number"},{field:"premiumType",displayName:"Type",visible:!1},{field:"issueDate",displayName:"Issue Date"},{field:"expiryDate",displayName:"Expiry Date"},{field:"premiumAmount",displayName:"Amount"},{field:"attachment",displayName:"Attachment",visible:!1},{field:"roadTaxId",displayName:"RoadTaxId",visible:!1}],keepLastSelected:!1,selectedItems:k.roadTaxSelectedData,multiSelect:!1,afterSelectionChange:k.fnRoadTaxRowSelected},k.fnAddRoadTaxToList=function(){return k.tmpRoadTaxDetails.issueDate&&k.tmpRoadTaxDetails.expiryDate&&k.tmpRoadTaxDetails.premiumAmount?(parseInt(k.tmpRoadTaxDetails.rowIndex)>=0?(k.vehicle.roadTaxDetails[k.tmpRoadTaxDetails.rowIndex].issueDate=k.tmpRoadTaxDetails.issueDate,k.vehicle.roadTaxDetails[k.tmpRoadTaxDetails.rowIndex].expiryDate=k.tmpRoadTaxDetails.expiryDate,k.vehicle.roadTaxDetails[k.tmpRoadTaxDetails.rowIndex].premiumAmount=k.tmpRoadTaxDetails.premiumAmount,k.vehicle.roadTaxDetails[k.tmpRoadTaxDetails.rowIndex].premiumType=k.tmpRoadTaxDetails.premiumType,k.vehicle.roadTaxDetails[k.tmpRoadTaxDetails.rowIndex].roadTaxNumber=k.tmpRoadTaxDetails.roadTaxNumber):k.vehicle.roadTaxDetails.push({premiumType:k.tmpRoadTaxDetails.premiumType,roadTaxNumber:k.tmpRoadTaxDetails.roadTaxNumber,issueDate:k.tmpRoadTaxDetails.issueDate,expiryDate:k.tmpRoadTaxDetails.expiryDate,premiumAmount:k.tmpRoadTaxDetails.premiumAmount,attachments:[]}),k.tmpRoadTaxDetails={roadTaxNumber:"",premiumType:"1",issueDate:p,expiryDate:q,premiumAmount:""},k.tmpRoadTaxDetails.rowIndex="",void 0):(alert("Please add all the road Tax details."),void 0)},k.rcAddButon="Add to List",k.fnClearVehicleRcFields=function(){k.tmpRcDetails={rcNumber:"",issueDate:p,expiryDate:q},k.tmpRcDetails.rowIndex="",k.rcAddButon="Add to List"
},k.fnRcRowSelected=function(a){return k.rcSelectedData.length?(console.log(k.rcSelectedData[0]),k.tmpRcDetails.rcNumber=k.rcSelectedData[0].rcNumber,k.tmpRcDetails.issueDate=k.rcSelectedData[0].issueDate,k.tmpRcDetails.expiryDate=k.rcSelectedData[0].expiryDate,k.tmpRcDetails.rcId=k.rcSelectedData[0].rcId,k.tmpRcDetails.rowIndex=a.rowIndex,k.rcAddButon="Update",void 0):(k.fnClearVehicleRcFields(),void 0)},k.rcSelectedData=[],k.rcGridOptions={data:"vehicle.rcDetails",columnDefs:[{field:"rcNumber",displayName:"Rc Number"},{field:"issueDate",displayName:"Issue Date"},{field:"expiryDate",displayName:"Expiry Date"},{field:"attachment",displayName:"Attachment",visible:!1},{field:"rcId",displayName:"RcId",visible:!1}],keepLastSelected:!1,selectedItems:k.rcSelectedData,multiSelect:!1,afterSelectionChange:k.fnRcRowSelected},k.fnAddRcToList=function(){return k.tmpRcDetails.issueDate&&k.tmpRcDetails.rcNumber&&k.tmpRcDetails.expiryDate?(parseInt(k.tmpRcDetails.rowIndex)>=0?(k.vehicle.rcDetails[k.tmpRcDetails.rowIndex].issueDate=k.tmpRcDetails.issueDate,k.vehicle.rcDetails[k.tmpRcDetails.rowIndex].expiryDate=k.tmpRcDetails.expiryDate,k.vehicle.rcDetails[k.tmpRcDetails.rowIndex].rcNumber=k.tmpRcDetails.rcNumber):k.vehicle.rcDetails.push({rcNumber:k.tmpRcDetails.rcNumber,issueDate:k.tmpRcDetails.issueDate,expiryDate:k.tmpRcDetails.expiryDate,attachments:[]}),k.tmpRcDetails={rcNumber:"",name:"",issueDate:p,expiryDate:q,provider:"",amount:""},k.tmpRcDetails.rowIndex="",void 0):(alert("Please add all the rc details."),void 0)},k.dentAndScratchAddButon="Add to List",k.fnClearVehicleDentAndScratchFields=function(){k.tmpDentAndScratchDetails={type:"1",severity:"1"},k.tmpDentAndScratchDetails.rowIndex="",k.dentAndScratchAddButon="Add to List"},k.fnDentAndScratchRowSelected=function(a){return k.dentAndScratchSelectedData.length?(k.tmpDentAndScratchDetails.type=k.dentAndScratchSelectedData[0].type,k.tmpDentAndScratchDetails.severity=k.dentAndScratchSelectedData[0].severity,k.tmpDentAndScratchDetails.rowIndex=a.rowIndex,k.dentAndScratchAddButon="Update",void 0):(k.fnClearVehicleDentAndScratchFields(),void 0)},k.dentAndScratchSelectedData=[],k.dentsAndScratchesGridOptions={data:"vehicle.vehicleCondition.exterior.dentAndScratch",columnDefs:[{field:"type",displayName:"Type",visible:!1},{field:"severity",displayName:"Severity",visible:!1},{field:"typeName",displayName:"Type"},{field:"severityName",displayName:"Severity"}],keepLastSelected:!1,selectedItems:k.dentAndScratchSelectedData,multiSelect:!1,afterSelectionChange:k.fnDentAndScratchRowSelected},k.fnAddDentAndScratchToList=function(){parseInt(k.tmpDentAndScratchDetails.rowIndex)>=0?(k.vehicle.vehicleCondition.exterior.dentAndScratch[k.tmpDentAndScratchDetails.rowIndex].type=k.tmpDentAndScratchDetails.type,k.vehicle.vehicleCondition.exterior.dentAndScratch[k.tmpDentAndScratchDetails.rowIndex].severity=k.tmpDentAndScratchDetails.severity,k.vehicle.vehicleCondition.exterior.dentAndScratch[k.tmpDentAndScratchDetails.rowIndex].typeName=k.dentsAndScraches[k.tmpDentAndScratchDetails.type-1].title,k.vehicle.vehicleCondition.exterior.dentAndScratch[k.tmpDentAndScratchDetails.rowIndex].severityName=k.dentAndScratchSeverityType[k.tmpDentAndScratchDetails.severity-1].title):k.vehicle.vehicleCondition.exterior.dentAndScratch.push({type:k.tmpDentAndScratchDetails.type,severity:k.tmpDentAndScratchDetails.severity,typeName:k.dentsAndScraches[k.tmpDentAndScratchDetails.type-1].title,severityName:k.dentAndScratchSeverityType[k.tmpDentAndScratchDetails.severity-1].title,attachments:[]}),k.tmpDentAndScratchDetails={type:"1",severity:"1"},k.tmpDentAndScratchDetails.rowIndex=""},k.dentsAndScraches=c.dentAndScratchType,k.dentAndScratchSeverityType=c.dentAndScratchSeverityType}]),angular.module("sigmaCabsApp").run(["AuthenticationService","$window","URLService","$rootScope",function(a,b,c,d){a.getSession().success(function(a){d.$broadcast("userInfoFromSession",{displayName:"Mario Ray",role:1,id:234565434})})}]).controller("vehicleMainController",["$scope","$rootScope","URLService","$dialog","modalWindow",function(a,b,c,d,e){var f=a;f.close=function(){dialog.close()},a.vehicleList=c.view("vehicleList"),f.fnAddVehicle=function(){a.opts={templateUrl:"views/vehicles/vehicleModal.html",controller:"vehicleAddUpdateController",dialogClass:"modalClass",resolve:{editMode:[function(){return!1}],oVehicle:function(){return{vehicleId:null}}}},e.addDataToModal(a.opts)},f.fnEditVehicle=function(){return f.selectedVehicleDetails?(a.opts={templateUrl:"views/vehicles/vehicleModal.html",controller:"vehicleAddUpdateController",dialogClass:"modalClass",resolve:{editMode:[function(){return!1}],oVehicle:function(){return f.selectedVehicleDetails}}},e.addDataToModal(a.opts),void 0):(alert("Please select a vehicle from the list to edit."),void 0)},f.$on("eventVehicleSelectedFromList",function(a,b){f.selectedVehicleDetails=b}),f.close=function(){dialog.close()}}]),angular.module("sigmaCabsApp").controller("vehicleListController",["$scope","$rootScope","URLService","PrerequisiteService","$dialog","$http","VehiclesService",function(a,b,c,d,e,f,g){a.vehiclesData=[],g.fnGetAllVehiclesData().success(function(b){console.log("Success: ",b);for(var c=0;c<b.length;c++)b[c].attachmenttypeName=d.vehicleAttachmentTypeNames[b[c].vehicleAttachmentType],b[c].vehicletypeName=d.vehicleTypeOptions[b[c].vehicleType];a.vehiclesData=b}).error(function(a){console.log("Error: ",a)}),a.filterOptions={filterText:"",useExternalFilter:!0},a.totalServerItems=0,a.pagingOptions={pageSizes:[10,50,100,150],pageSize:10,currentPage:1},a.fnSetPagingData=function(b,c,d){var e=b.slice((c-1)*d,c*d);a.myData=e,a.totalServerItems=b.length,a.$$phase||a.$apply()},a.fnGetPagedDataAsync=function(b,d){setTimeout(function(){f.get(c.service("getAllVehicles")).success(function(c){a.fnSetPagingData(c,d,b)})},100)},a.$watch("pagingOptions",function(b,c){b!==c&&b.currentPage!==c.currentPage&&a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage,a.filterOptions.filterText)},!0),a.$watch("filterOptions",function(b,c){b!==c&&a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage,a.filterOptions.filterText)},!0),a.gridOptions={data:"vehiclesData",columnDefs:[{field:"vehicleCode",displayName:"Vehicle Code"},{field:"vehicleColor",displayName:"Color"},{field:"vehicletypeName",displayName:"Type"},{field:"manufacturingYear",displayName:"Manufactured Year"},{field:"registrationNumber",displayName:"Registration#"},{field:"attachmenttypeName",displayName:"Aattachment Type"},{field:"registeredMobileNumber",displayName:"Registartion Mobile"}],enablePaging:!0,showFooter:!0,multiSelect:!1,totalServerItems:"totalServerItems",pagingOptions:a.pagingOptions,filterOptions:a.filterOptions,afterSelectionChange:function(b){a.$emit("eventVehicleSelectedFromList",b.selectionProvider.selectedItems[0]),a.selectedVehicleDetails=b.selectionProvider.selectedItems[0],console.log("Selected vehicle details:",b.selectionProvider.selectedItems[0])}}}]),angular.module("sigmaCabsApp").run(["AuthenticationService","$window","URLService","$rootScope",function(a,b,c,d){a.getSession().success(function(a){d.$broadcast("userInfoFromSession",{displayName:"Mario Ray",role:1,id:234565434})})}]).controller("bookingController",["$scope","$rootScope","URLService","BookingService","$routeParams","PrerequisiteService",function(a,b,c,d,e){var f=a;a.safeApply=function(a){var b=this.$root.$$phase;"$apply"==b||"$digest"==b?a&&"function"==typeof a&&a():this.$apply(a)},f.existingCustomerAddBooking=c.view("loadingText"),f.loadingText="booking data",f.fnLoadBookingView=function(){f.existingCustomerAddBooking=c.view("existingCustomerAddBooking"),a.$on("eventShowAddNewCustomer",function(a,b){f.showAddNewCustomerList=b,f.showCustomerList=!b,f.showCustomerList&&(f.showExistingCustomerAddBooking=!1)}),a.$on("eventCustomerSelectedFromList",function(a,b){f.showExistingCustomerAddBooking=b,f.showCustomerList=!b,f.showCustomerList&&(f.showAddNewCustomerList=!1)}),f.fnNewCustomerBooking=function(){f.showExistingCustomerAddBooking=!1,f.showCustomerList=!1,f.showAddNewCustomerList=!0},f.fnExistingCustomerBooking=function(){f.showExistingCustomerAddBooking=!0,f.showCustomerList=!1,f.showAddNewCustomerList=!1},f.fnViewCustomerList=function(){f.showExistingCustomerAddBooking=!1,f.showCustomerList=!0,f.showAddNewCustomerList=!1}},f.showExistingCustomerAddBooking=!1,e.mobile&&(f.showExistingCustomerAddBooking=!0,d.fnFindCustomerByMobile({mobile:e.mobile}).success(function(a){console.log("Success: ",a),f.customer=a,f.customer.bookingDetails||(f.customer.bookingDetails={}),f.customer.bookingDetails.customerId=f.customer.customerDetails.id,f.customer.bookingDetails.customerId=f.customer.id,f.bookingDetails=f.customer.bookingDetails,f.fnLoadBookingView()}).error(function(a){console.log("error: ",a),f.customerDetails={source:"Some Text"},alert("There was some error while getting customer details. "),f.fnLoadBookingView()}))}]),angular.module("sigmaCabsApp").controller("bookingFormController",["$scope","$rootScope","URLService","PrerequisiteService","BookingService","VehiclesService","$dialog","modalWindow",function(a,b,c,d,e,f){var g=a;a.gPlace,g.vehicleTypes=d.vehicleTypeOptions,g.luggageTypes=d.luggageTypes,g.bookingSnapshotSubTab=1,g.fnIsActiveBookingSnapshotSubTab=function(a){return g.bookingSnapshotSubTab==a},g.fnSetActiveBookingSnapshotSubTab=function(a){g.bookingSnapshotSubTab=a},g.fnGetVehicleAvailability=function(){if(g.bookingDetails.journeyDate&&g.bookingDetails.pickupTime){var a=g.bookingDetails.journeyDate.split("-"),b=g.bookingDetails.pickupTime.split(":"),c=new Date,d=new Date(a[0],a[1]-1,a[2],b[0],b[1]);if(g.softAlertError="",g.spotBookingIntimationMsg="",g.vehicleAvailabilityCheckMsg="",d.getTime()<c.getTime())return g.softAlertError="Please enter a future journey date.",void 0;g.iHoursGap=parseFloat((d.getTime()-c.getTime())/36e5).toFixed(2),g.iHoursGap<=6&&(g.spotBookingIntimationMsg="This is a spot booking(Hours remaining for journey is "+g.iHoursGap+"). Dispatcher intimation will be sent. Please follow-up before committing to the customer."),g.iHoursGap<=1&&(g.vehicleAvailabilityCheckMsg="This is a spot booking(Hours remaining for journey is "+g.iHoursGap+"). Please check the vehicle availablity before committing to the customer.")}},g.bookingSnapshotPackageDurationDetails=c.view("bookingSnapshotPackageDuration"),g.bookingSnapshotTarrifDetails=c.view("bookingSnapshotTarrifDetails"),g.bookingSnapshotRouteMapDetails=c.view("bookingSnapshotRouteMapDetails"),g.bShowAvailableVehicles=!1,g.fnShowAvailableVehicles=function(){g.bShowAvailableVehicles=!0},g.fnGetBookingTariffs=function(){g.bookingDetails.journeyDate&&g.bookingDetails.pickupTime&&e.fnGetBookingTariffs(g.bookingDetails).success(function(a){console.log("Success fnGetBookingTariffs: ",a),g.tariffDetails=a}).error(function(a){console.log("error fnGetBookingTariffs: ",a)})},g.fnGetAvailabeVehicles=function(){g.bookingDetails.journeyDate&&g.bookingDetails.pickupTime&&f.fnGetAvailabeVehicles(g.bookingDetails).success(function(a){console.log("Success fnGetAvailabeVehicles: ",a),g.availableVehicles=a}).error(function(a){console.log("error fnGetAvailabeVehicles: ",a)})},g.fnValidatePassengerCount=function(){if(g.softAlertError="",isNaN(g.bookingDetails.passengerCount))return g.softAlertError="Please enter a valid passenger count.",void 0;for(var a=0,b=0;b<g.bookingDetails.vehicleTypes.length;b++)switch(parseInt(g.bookingDetails.vehicleTypes[b])){case 1:a+=5;break;case 2:a+=5;break;case 3:a+=7;break;case 4:a+=11}a<g.bookingDetails.passengerCount&&(g.softAlertError="Passenger count is more than vehicle seats.")},g.$watch("bookingDetails.vehicleCount",function(){g.fnValidatePassengerCount(),g.fnGetBookingTariffs(),g.fnGetAvailabeVehicles()},!0),g.$watch("bookingDetails.journeyDate",function(){g.fnGetVehicleAvailability(),g.fnGetBookingTariffs(),g.fnGetAvailabeVehicles()},!0),g.$watch("bookingDetails.pickupTime",function(){g.fnGetVehicleAvailability(),g.fnGetBookingTariffs(),g.fnGetAvailabeVehicles()},!0),g.$watch("bookingDetails.passengerCount",function(){g.fnValidatePassengerCount(),g.fnGetBookingTariffs(),g.fnGetAvailabeVehicles()},!0),g.$watch("bookingDetails.vehicleTypes",function(){g.fnValidatePassengerCount(),g.fnGetBookingTariffs(),g.fnGetAvailabeVehicles()},!0),g.availableVehicleGrid={data:"availableVehicles",columnDefs:[{field:"vehicleCode",displayName:"Vehicle Code"},{field:"vehicleType",displayName:"Type"}]}}]),angular.module("sigmaCabsApp").controller("HeaderController",["$scope","$rootScope","URLService","$dialog",function(a){a.displayName="loading user info...",a.$on("userInfoFromSession",function(b,c){a.displayName=c.displayName})}]),angular.module("sigmaCabsApp").controller("CanceledBookingListController",["$scope","$rootScope","URLService","$dialog","$http",function(a,b,c,d,e){a.filterOptions={filterText:"",useExternalFilter:!0},a.totalServerItems=0,a.pagingOptions={pageSizes:[10,50,100,150],pageSize:10,currentPage:1},a.fnSetPagingData=function(b,c,d){var e=b.slice((c-1)*d,c*d);a.myData=e,a.totalServerItems=b.length,a.$$phase||a.$apply()},a.fnGetPagedDataAsync=function(b,d){setTimeout(function(){e.get(c.service("canceledBooking")).success(function(c){a.fnSetPagingData(c,d,b)})},100)},a.$watch("pagingOptions",function(b,c){b!==c&&b.currentPage!==c.currentPage&&a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage,a.filterOptions.filterText)},!0),a.$watch("filterOptions",function(b,c){b!==c&&a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage,a.filterOptions.filterText)},!0),a.gridOptions={data:"myData",columnDefs:[{field:"canceleddatetime",displayName:"Canceled DateTime"},{field:"bookingdatetime",displayName:"Booking DateTime"},{field:"journeydatetime",displayName:"Journey DateTime"},{field:"source",displayName:"Source"},{field:"destination",displayName:"Destination"},{field:"type",displayName:"Type"},{field:"remark",displayName:"Remark"}],enablePaging:!0,showFooter:!0,multiSelect:!1,totalServerItems:"totalServerItems",pagingOptions:a.pagingOptions,filterOptions:a.filterOptions,afterSelectionChange:function(a){console.log(a.selectionProvider.selectedItems[0])}},a.$on("loadCanceledBookingList",function(b,c){a.oQuery=c,a.myData=[],a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage)})}]),angular.module("sigmaCabsApp").controller("PastBookingListController",["$scope","$rootScope","URLService","$dialog","$http",function(a,b,c,d,e){a.filterOptions={filterText:"",useExternalFilter:!0},a.totalServerItems=0,a.pagingOptions={pageSizes:[10,50,100,150],pageSize:10,currentPage:1},a.fnSetPagingData=function(b,c,d){var e=b.slice((c-1)*d,c*d);a.myData=e,a.totalServerItems=b.length,a.$$phase||a.$apply()},a.fnGetPagedDataAsync=function(b,d){setTimeout(function(){e.get(c.service("pastBooking")).success(function(c){a.fnSetPagingData(c,d,b)})},100)},a.$watch("pagingOptions",function(b,c){b!==c&&b.currentPage!==c.currentPage&&a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage,a.filterOptions.filterText)},!0),a.$watch("filterOptions",function(b,c){b!==c&&a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage,a.filterOptions.filterText)},!0),a.gridOptions={data:"myData",columnDefs:[{field:"bookingdatetime",displayName:"Booking DateTime"},{field:"journeydatetime",displayName:"Journey DateTime"},{field:"source",displayName:"Source"},{field:"destination",displayName:"Destination"},{field:"type",displayName:"Type"},{field:"remark",displayName:"Remark"}],enablePaging:!0,showFooter:!0,multiSelect:!1,totalServerItems:"totalServerItems",pagingOptions:a.pagingOptions,filterOptions:a.filterOptions,afterSelectionChange:function(a){console.log(a.selectionProvider.selectedItems[0])}},a.$on("loadPastBookingList",function(b,c){a.oQuery=c,a.myData=[],a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage)})}]),angular.module("sigmaCabsApp").controller("UpcomingBookingListController",["$scope","$rootScope","URLService","$dialog","$http",function(a,b,c,d,e){a.filterOptions={filterText:"",useExternalFilter:!0},a.totalServerItems=0,a.pagingOptions={pageSizes:[10,50,100,150],pageSize:10,currentPage:1},a.fnSetPagingData=function(b,c,d){var e=b.slice((c-1)*d,c*d);a.myData=e,a.totalServerItems=b.length,a.$$phase||a.$apply()},a.fnGetPagedDataAsync=function(b,c,d){setTimeout(function(){var f;if(d){var g=d.toLowerCase();e.get("scripts/fixtures/upcomingBookingList.json").success(function(d){f=d.filter(function(a){return-1!=JSON.stringify(a).toLowerCase().indexOf(g)}),a.fnSetPagingData(f,c,b)})}else e.get("scripts/fixtures/upcomingBookingList.json").success(function(d){a.fnSetPagingData(d,c,b)})},100)},a.$watch("pagingOptions",function(b,c){b!==c&&b.currentPage!==c.currentPage&&a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage,a.filterOptions.filterText)},!0),a.$watch("filterOptions",function(b,c){b!==c&&a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage,a.filterOptions.filterText)},!0),a.gridOptions={data:"myData",columnDefs:[{field:"bookingdatetime",displayName:"Booking DateTime"},{field:"journeydatetime",displayName:"Journey DateTime"},{field:"source",displayName:"Source"},{field:"destination",displayName:"Destination"},{field:"type",displayName:"Type"},{field:"remark",displayName:"Remark"}],enablePaging:!0,showFooter:!0,multiSelect:!1,totalServerItems:"totalServerItems",pagingOptions:a.pagingOptions,filterOptions:a.filterOptions,afterSelectionChange:function(a){console.log(a.selectionProvider.selectedItems[0])}},a.$on("loadUpcomingBookingList",function(b,c){a.oQuery=c,a.myData=[],a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage)})}]),angular.module("sigmaCabsApp").controller("CustomerBookingTabs",["$scope","$rootScope","URLService","$dialog",function(a){a.tab=1,a.fnIsActive=function(b){return a.tab==b},a.$on("setDefaultBookingTab",function(){a.tab=1})}]),angular.module("sigmaCabsApp").controller("ExistingCustomerAddBooking",["$scope","PrerequisiteService","BookingService","CustomerService","$rootScope","URLService","$dialog",function(a,b,c,d,e,f){var g=a;g.bShowAddMoreFields=!0,g.pickupPlaceTypes=b.pickupPlaceTypes,g.bookingStatuses=b.bookingStatuses,g.paymentModes=b.paymentModes,g.isPrimaryTraveller=b.isPrimaryTraveller,g.extraFieldTypes={pickupPlace:"pickupPlaceTypes"},g.fnGetEmptyCustomerFields=function(){var a={};for(var c in b.customerFields)g.customer.customerDetails[c]||(a[c]=b.customerFields[c]);return g.nextEmptyCustomerField=c,a},g.emptyCustomerFields=g.fnGetEmptyCustomerFields(b.customerFields),g.bViewSelectiveField=!0,g.bViewAllFields=!1,g.viewAllInfoMsg="View All Info",g.fnToggleAllInfoView=function(){g.bViewSelectiveField=!g.bViewSelectiveField,g.bViewAllFields=!g.bViewAllFields,g.viewAllInfoMsg=g.bViewSelectiveField?"View All Info":"View Less Info"},g.personalDetailsForm=f.view("personalForm"),g.bookingHistory=f.view("bookingHistory"),g.bookingDetailsForm=f.view("bookingForm"),g.extraInfoDetails=f.view("extraInfoDetails"),a.$on("dynamicFieldAdded",function(a,b){g.bShowAddMoreFields=!1;var c="";for(var d in g.emptyCustomerFields)d==b&&delete g.emptyCustomerFields[d];for(var d in g.emptyCustomerFields)if(""!=d){c=d;break}g.nextEmptyCustomerField=c,g.bShowAddMoreFields=c?!0:!1,g.$apply()}),g.$watch("customer.customerDetails",function(a,b){angular.equals(a,b)||g.fnSaveCustomerDetails()},!0),g.fnSaveCustomerDetails=function(){d.fnUpdateCustomerDetails(g.customerDetails).success(function(a){console.log("Success CustomerSave: ",a)}).error(function(a){console.log("error Customer Save: ",a),g.customerDetails={source:"Some Text"}})},g.fnSaveBooking=function(){c.fnSaveBooking(g.bookingDetails).success(function(a){console.log("Success fnSaveBooking: ",a),alert("Booking Saved successfully.")}).error(function(a){console.log("error fnSaveBooking: ",a)})}}]),angular.module("sigmaCabsApp").controller("bookingHistory",["$scope","PrerequisiteService","BookingService","CustomerService","$rootScope","URLService","$dialog",function(a,b,c,d,e,f){var g=a;g.customerBookingTabs=f.view("customerBookingTabs")}]),angular.module("sigmaCabsApp").controller("extraInfoDetails",["$scope","PrerequisiteService","BookingService","CustomerService","$rootScope","URLService","$dialog",function(a){}]),angular.module("sigmaCabsApp").run(["AuthenticationService","$window","URLService","$rootScope",function(a,b,c,d){a.getSession().success(function(a){d.$broadcast("userInfoFromSession",{displayName:"Mario Ray",role:1,id:234565434})})}]).controller("dispatchMainController",["$scope","$rootScope","URLService","$dialog","modalWindow","dispatchService","$location",function(a,b,c,d,e,f,g){var h=a;a.dispatchersList=c.view("dispatchersList"),a.dispVehicleList=c.view("dispVehicleList"),a.dispatchObj={bookingId:""},a.vehicleLogin=function(){a.opts={templateUrl:c.view("vehicleLogin"),controller:"vehicleLoginController",dialogClass:"smallModalClass"},e.addDataToModal(a.opts)},h.vehicleLogout=function(){a.opts={templateUrl:c.view("vehicleLogin"),controller:"vehicleLogoutController",dialogClass:"smallModalClass"},e.addDataToModal(a.opts)},a.breakStart=function(){a.opts={templateUrl:c.view("breakDetails"),controller:"breakStartController",dialogClass:"smallModalClass"},e.addDataToModal(a.opts)},a.breakEnd=function(){a.opts={templateUrl:c.view("breakDetails"),controller:"breakEndController",dialogClass:"smallModalClass"},e.addDataToModal(a.opts)},a.startReport=function(){a.opts={templateUrl:c.view("reportDetails"),controller:"vehicleLoginController",dialogClass:"smallModalClass"},e.addDataToModal(a.opts)},a.closeReport=function(){a.opts={templateUrl:c.view("vehicleLogin"),controller:"vehicleLoginController",dialogClass:"smallModalClass"},e.addDataToModal(a.opts)},b.$on("showVehicleGrid",function(){a.showVehicleDetView=!0}),h.getDisptachDetails=function(){b.$broadcast("getDispatchDetails")},a.$on("selectedBookingDet",function(b,c){console.log(c),a.dispatchObj.bookingId=c[0].id}),a.$on("selectedVehicleDet",function(b,c){console.log(c),a.dispatchObj.vehicleId=c}),a.dispatchVechile=function(){a.getDisptachDetails(),console.log(a.dispatchObj),f.fnAddDispatchData(a.dispatchObj).success(function(){g.path("/dispatch")}).error(function(a){console.log("Error: ",a)})},a.close=function(){dialog.close()}}]),angular.module("sigmaCabsApp").controller("dispatchersListController",["$scope","$rootScope","URLService","$dialog","dispatchService","$timeout",function(a,b,c,d,e,f){a.selectedVehicleList=[],a.selectedBookingRecords=[],a.mySelections=[],a.bookingData=[],e.fnGetDisBookingData().success(function(b){console.log("Success: ",b),a.bookingData=b}).error(function(a){console.log("Error: ",a)}),a.totalServerItems=0,a.pagingOptions={pageSizes:[10,50,100,150],pageSize:10,currentPage:1},a.columnDefs=[{field:"id",displayName:"ID",width:"*"},{field:"pickupAddress",displayName:"Pickup Address",width:"*"},{field:"dropAddress",displayName:"Drop Address",width:"*"},{field:"journeyDate",displayName:"Journey Date",width:"*"},{field:"pickupTime",displayName:"Pickup Time",width:"*"},{field:"customerId",displayName:"Customer Id",width:"*"},{field:"bookingState",displayName:"Booking State",width:"*"},{field:"passengerCount",displayName:"Passenger Count",width:"*"},{field:"vehicleCount",displayName:"Vehicle Count",width:"*"},{field:"vehicleTypes",displayName:"Vehicle Types",width:"*"},{field:"status",displayName:"Status",width:"*"}],a.dispBookGridOptions={data:"bookingData",columnDefs:a.columnDefs,enablePaging:!0,showFooter:!0,multiSelect:!1,enableColumnResize:!0,totalServerItems:"totalServerItems",pagingOptions:a.pagingOptions,filterOptions:a.filterOptions,showSelectionCheckbox:!0,selectedItems:a.mySelections,afterSelectionChange:function(){console.log(a.mySelections),b.$emit("showVehicleGrid"),a.showVehicleDetView=!0,a.selectedBookings=[],angular.forEach(a.mySelections,function(b){a.selectedBookingRecords.push(b)})},plugins:[new ngGridRowSelectionEvents]},a.$on("ngGridRowSelected",function(){f(function(){b.$emit("showVehicleGrid"),a.showVehicleDetView=!0},0)}),a.$on("ngGridRowDeSelected",function(){f(function(){b.$emit("hideVehicleGrid"),a.showVehicleDetView=!1},0)}),a.$watch("showVehicleDetView",function(){f(function(){$(".dispBookingGrid").trigger("resize")},0)}),a.$on("getDispatchDetails",function(){a.sendSelectedRecords()}),a.sendSelectedRecords=function(){a.$emit("selectedBookingDet",a.selectedBookingRecords)}}]),angular.module("sigmaCabsApp").controller("dispatchersVehiclesList",["$scope","$rootScope","URLService","$dialog","dispatchService",function(a,b,c,d,e){a.selectedVehicleList=a.vehicleData=[];var f={activity:"9"};e.fnGetDisVehiData(f).success(function(b){console.log("Success: ",b),a.vehicleData=b}).error(function(a){console.log("Error: ",a)}),a.filterOptions={filterText:"",useExternalFilter:!0},a.totalServerItems=0,a.pagingOptions={pageSizes:[10,50,100,150],pageSize:10,currentPage:1},a.fnSetPagingData=function(b,c,d){var e=b.slice((c-1)*d,c*d);a.myData=e,a.totalServerItems=b.length,a.$$phase||a.$apply()},a.fnGetPagedDataAsync=function(b,d){setTimeout(function(){$http.get(c.service("usersList")).success(function(c){a.fnSetPagingData(c,d,b)})},100)},a.$watch("pagingOptions",function(b,c){b!==c&&b.currentPage!==c.currentPage&&a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage,a.filterOptions.filterText)},!0),a.mySelections=[],a.selectedVehicles=[],a.vehicleGridOptions={data:"vehicleData",columnDefs:[{field:"registrationNumber",displayName:"Registation Number"},{field:"id",displayName:"ID"},{field:"vehicleCode",displayName:"Vehicle Code"},{field:"vehicleType",displayName:"Vehicle Type"},{field:"brand",displayName:"Brand"},{field:"registrationMobile",displayName:"Registartion Mobile"}],showFooter:!0,multiSelect:!1,enableColumnResize:!0,selectedItems:a.mySelections,showSelectionCheckbox:!0,afterSelectionChange:function(){angular.forEach(a.mySelections,function(b){console.log(b),b.id&&a.selectedVehicles.push(b.id)})}},a.$watch("filterOptions",function(b,c){b!==c&&a.fnGetPagedDataAsync(a.pagingOptions.pageSize,a.pagingOptions.currentPage,a.filterOptions.filterText)},!0),b.$on("showVehicleGrid",function(){a.showVehicleDetView=!0}),b.$on("hideVehicleGrid",function(){a.showVehicleDetView=!1}),a.$on("getDispatchDetails",function(){a.sendSelectedRecords()}),a.sendSelectedRecords=function(){a.$emit("selectedVehicleDet",a.selectedVehicles)}}]),angular.module("sigmaCabsApp").run(["AuthenticationService","$window","URLService","$rootScope",function(a,b,c,d){a.getSession().success(function(a){d.$broadcast("userInfoFromSession",{displayName:"Mario Ray",role:1,id:234565434})})}]).controller("vehicleLoginController",["$scope","$rootScope","URLService","$dialog","modalWindow","dialog","dispatchService",function(a,b,c,d,e,f,g){console.log("vehicleLoginController"),a.vehiicleHeading="Vehicle Login";var h={activity:"1"};g.fnGetDisVehiData(h).success(function(b){console.log("Success: ",b),a.vehiclesList=b}).error(function(a){console.log("Error: ",a)});var h={userType:"1"};g.fnGetAllDrivData(h).success(function(b){console.log("Success: ",b),a.driversList=b}).error(function(a){console.log("Error: ",a)}),a.handleSave=function(){a.VehicleLoginObj={},a.VehicleLoginObj.vehicleId=a.chosenVehicle,a.VehicleLoginObj.driverId=a.chosenDriver,a.VehicleLoginObj.location=a.chosenPlace,a.VehicleLoginObj.comments=a.vehicleComments,a.VehicleLoginObj.activity="9",g.fnSendLogDetails(a.VehicleLoginObj).success(function(b){console.log("Success: ",b),a.close()}).error(function(a){console.log("Error: ",a)})},a.close=function(){f.close()}}]),angular.module("sigmaCabsApp").run(["AuthenticationService","$window","URLService","$rootScope",function(a,b,c,d){a.getSession().success(function(a){d.$broadcast("userInfoFromSession",{displayName:"Mario Ray",role:1,id:234565434})})}]).controller("vehicleLogoutController",["$scope","$rootScope","URLService","$dialog","modalWindow","dialog","dispatchService",function(a,b,c,d,e,f,g){console.log("vehicleLogoutController"),a.vehiicleHeading="Vehicle Logout";var h={activity:"9"};g.fnGetDisVehiData(h).success(function(b){console.log("Success: ",b),a.vehiclesList=b}).error(function(a){console.log("Error: ",a)});var h={userType:"1"};g.fnGetAllDrivData(h).success(function(b){console.log("Success: ",b),a.driversList=b}).error(function(a){console.log("Error: ",a)}),a.handleSave=function(){a.VehicleLoginObj={},a.VehicleLoginObj.vehicleId=a.chosenVehicle,a.VehicleLoginObj.driverId=a.chosenDriver,a.VehicleLoginObj.location=a.chosenPlace,a.VehicleLoginObj.comments=a.vehicleComments,a.VehicleLoginObj.activity="1",g.fnSendLogDetails(a.VehicleLoginObj).success(function(b){console.log("Success: ",b),a.close()}).error(function(a){console.log("Error: ",a)})},a.close=function(){f.close()}}]),angular.module("sigmaCabsApp").run(["AuthenticationService","$window","URLService","$rootScope",function(a,b,c,d){a.getSession().success(function(a){d.$broadcast("userInfoFromSession",{displayName:"Mario Ray",role:1,id:234565434})})}]).controller("breakStartController",["$scope","$rootScope","URLService","$dialog","modalWindow","dialog","dispatchService",function(a,b,c,d,e,f,g){console.log("breakStartController"),a.modalHeading="Duty Break Start";var h={userType:"1"};g.fnGetAllDrivData(h).success(function(b){console.log("Success: ",b),a.driversList=b}).error(function(a){console.log("Error: ",a)}),a.handleSave=function(){a.VehicleLoginObj={},a.VehicleLoginObj.driverId=a.chosenDriver,a.VehicleLoginObj.location=a.chosenPlace,a.VehicleLoginObj.comments=a.vehicleComments,a.VehicleLoginObj.activity="2",g.fnSendLogDetails(a.VehicleLoginObj).success(function(b){console.log("Success: ",b),a.close()}).error(function(a){console.log("Error: ",a)})},a.close=function(){f.close()}}]),angular.module("sigmaCabsApp").run(["AuthenticationService","$window","URLService","$rootScope",function(a,b,c,d){a.getSession().success(function(a){d.$broadcast("userInfoFromSession",{displayName:"Mario Ray",role:1,id:234565434})})}]).controller("breakEndController",["$scope","$rootScope","URLService","$dialog","modalWindow","dialog","dispatchService",function(a,b,c,d,e,f,g){console.log("breakEndController"),a.modalHeading="Duty Break End";var h={userType:"1"};g.fnGetAllDrivData(h).success(function(b){console.log("Success: ",b),a.driversList=b}).error(function(a){console.log("Error: ",a)}),a.handleSave=function(){a.VehicleLoginObj={},a.VehicleLoginObj.driverId=a.chosenDriver,a.VehicleLoginObj.location=a.chosenPlace,a.VehicleLoginObj.comments=a.vehicleComments,a.VehicleLoginObj.activity="3",g.fnSendLogDetails(a.VehicleLoginObj).success(function(b){console.log("Success: ",b),a.close()}).error(function(a){console.log("Error: ",a)})},a.close=function(){f.close()}}]);